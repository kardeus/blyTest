// Generated by Dagger (https://dagger.dev).
package twin.jin.data.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;
import twin.jin.data.source.remote.AblyApi;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteDataSourceModule_ProvideAblyApiFactory implements Factory<AblyApi> {
  private final Provider<Retrofit> retrofitProvider;

  public RemoteDataSourceModule_ProvideAblyApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public AblyApi get() {
    return provideAblyApi(retrofitProvider.get());
  }

  public static RemoteDataSourceModule_ProvideAblyApiFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new RemoteDataSourceModule_ProvideAblyApiFactory(retrofitProvider);
  }

  public static AblyApi provideAblyApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(RemoteDataSourceModule.INSTANCE.provideAblyApi(retrofit));
  }
}
